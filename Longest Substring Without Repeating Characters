class Solution {
public:
    int lengthOfLongestSubstring(string str) {
    
    //EDGE CASES
    if(str.length() == 0){return 0;}
    
    //MAKING FREQUENCY TABLE 
    map<char,int>freq;
    freq[str[0]]++;
    int start = 0 , end = 1;
    int maxi , count = INT_MIN;
    
    //MAIN ALGORITHM 
    while(end!=str.length())
    {
        //FREQUENCY PART 
        freq[str[end]]++;
        
        if(freq[str[end]]>1)
        {
            maxi = (end - start) ;
            count = max(maxi, count);
            while(str[start]!=str[end]){freq[str[start]]-=1; start++;}
            freq[str[start]]-=1;
            start+=1;
        }
        
        //TRAVERSING PART 
        end++;
    }
    maxi = (end - start) ;
    count = max(maxi, count);
    
    return count;
    }
};
